%META:TOPICINFO{author="micha" comment="autosave" date="1403544053" format="1.1" version="3"}%
---+!! %TOPIC%
%SHORTDESCRIPTION%

%TOC%

This plugin implements a set of additional special purpose formfields to be used in [[%SYSTEMWEB%.DataForms][DataForm]] definitions.

These are:

   * =ipaddress=: a general purpose IP4 address, consisting of 4 octets, e.g. =10.0.0.1=
   * =netmask=: a special IP address used for routing, consisting of 4 octets, e.g. =255.255.255.0=
   * =macaddress=: a hardware address given in 6 hex values, e.g. =00:1a:10:6f:ba:12=
   * =topic=: topic autocomplete. Parameters can be added in the value column and are structured like macro parameters, with the following options available:
      * =web=: the web the user can choose topics from; defaults to current web
      * =default=: the default value to use if no value exists yet
      * =url=: URL for autocomplete, default: =%SCRIPTURL{view}%/%SYSTEMWEB%/MoreFormfieldsAjaxHelper?section&#61;select2::topic;skin&#61;text;contenttype&#61;application/json%3Bcharset%3Dutf-8=
      * ... and any select2 option
   * =user=: user autocomplete. You can use a '+multi' suffix to enable selecting multiple users and a '+group' suffix to also find usergroups. You can filter users by groups with =ingroup= parameter(comma separated list). In addition, all of the parameters of =select2= below are available, though it's probably not a good idea to override the =displayTopic= or =displaySection=.
   * =select2=: Select2 widget with pre-defined available values (or an arbitrary AJAX helper). Parameters work the same way as for =topic=, but in the 'attributes' column. Be careful to not accidentally use a capital 'H' or 'M' in any parameter because otherwise the field will be interpreted as hidden or mandatory. Alternatively, you can supply parameters as preferences in the form topic. For example, for a field called 'Foo', you can set the 'width' option using the preference name =Foo_s2_width=.
      * In the values column, just like in the =textboxlist= widget, put a URL to use it as an AJAX helper, or a comma-separated list of values just like for a normal select. (For select2+values you can use a list of mapped values as for select+values.)
      * =placeholder=: string to show when no value has been selected.
      * =placeholderValue=: value to be set when no value has been selected.
      * =width=: how to calculate the element's width (see Select2 documentation for details).
      * =defaultValue=: set the value to be used when the field is empty/not set.
      * =allowClear=: true if there should be a button to empty the widget.
      * =displayTopic=/=displaySection=: for URL-based select2 fields, put a topic and a section name here. The label/text of an option will be generated by expanding the specified section. Within the section, a %<nop>id% placeholder will be available that contains a value; the section should expand to the corresponding display value.
      * =displayParams=: when using displayTopic/displaySection, you can pass a comma-separated list of parameters (key and value separated by a '=' sign) which will be made available as preferences to the section.
      * =ajaxPassFields=: comma-separated list of =key:value= pairs; =value= is the name of a form field (or, if it is prefixed with a '=' sign, a literal string to be passed) and =key= is the name of the GET parameter in which the AJAX helper will receive the current value of that form field. This allows for AJAX queries parameterized on other form fields.
      * =resultsFilter=: if set, used as the name of a method in the =window= object (i.e. <code>window.myfunc = function(...){}</code>) that is called on results returned by the AJAX endpoint. The function is passed the data object and should return the new data object.
      * =limit=: if set, the value of this parameter is passed to the AJAX call. Default is 10.
   * =firstallcheckbox=: behaves just like the normal checkbox type, but the first checkbox in the list is assumed to have a special meaning: its value is taken to mean "all options". Therefore, checking the first box will automatically uncheck all others, and checking any other box will uncheck the first. Add '+last' to the type to make the last checkbox special instead. The '+buttons' subtype normally available for 'checkbox' is not supported.
   * =autofill=
   * =phonenumber=
   * =time=
   * =icon=

---++ !ExampleForm definition

| *Name*  | *Type* | *Size* | *Values* | *Tooltip message* | *Attributes* |
| <nop>IpAddress | ipaddress |  15  | | network address | M |
| Netmask | netmask |  15  | | netmask |  |
| <nop>MacAddress | macaddress |  17  | | hardware-addresse | |

---++ Installation Instructions

%$INSTALL_INSTRUCTIONS%

---++ Info
<!--
   * Set SHORTDESCRIPTION = Additionall formfield types for !DataForms
-->

|  Author(s): | Michael Daum|
|  Copyright: | &copy; 2010-2014 Michael Daum http://michaeldaumconsulting.com |
|  License: | [[http://www.gnu.org/licenses/gpl.html][GPL (Gnu General Public License)]] |
|  Release: | %$RELEASE% |
|  Version: | %$VERSION% |
|  Change History: | <!-- versions below in reverse order -->&nbsp; |
|  04 Apr 2014: | fixed compatibility with foswiki >= 1.2.0 |
|  23 Sep 2010: | initial release |
|  Dependencies: | %$DEPENDENCIES% |
|  Home page: | Foswiki:Extensions/%TOPIC% |
|  Support: | Foswiki:Support/%TOPIC% |
